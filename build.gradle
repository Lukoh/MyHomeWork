// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_gradle_plugin_version = "1.5.30"

        kotlin_version = '1.5.0'
        ktlint_version = '8.2.0'

        arch_version = '2.1.0'
        arch_lifecycle_version = '2.3.1'
        arch_lifecycle_extension_version = '2.2.0'
        arch_lifecycle_ktx = '2.3.1'
        arch_lifecycle_runtime_ktx = '2.4.0-alpha03'
        arch_paging_version = '3.0.1'
        arch_nav_version = "2.3.5"
        arch_fragmentVersion = '1.3.6'
        arch_activityVersion = "1.3.1"

        androidx_version = '1.2.0'
        androidx_recyclerview_version = '1.2.1'
        androidx_cardview_version = '1.0.0'
        androidx_core_ktx_version = '1.6.0'
        androidx_appcompat_version = '1.3.1'
        androidx_multidex_version = '2.0.1'

        design_support_version = '1.3.0'

        constraint_layout_version = '2.0.4'

        retrofit_version = "2.9.0"
        okhttp3_version = '4.9.0'

        dagger_version = '2.38.1'

        timber_version = '4.7.1'

        enableCrashlytics = false
    }

    repositories {
        google()
        mavenCentral()
        maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_gradle_plugin_version"
        classpath 'com.google.gms:google-services:4.3.10' // google-services plugin
        classpath 'com.android.tools.build.jetifier:jetifier-processor:1.0.0-beta10'
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath 'com.google.firebase:perf-plugin:1.4.0'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktlint_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$arch_nav_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version "4.1.0"
    id "org.jlleitschuh.gradle.ktlint" version "$ktlint_version"
    id "org.jetbrains.kotlin.android" version "$kotlin_version" apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven.google.com' }
        // This is for library : com.facetec:zoom-authentication
        // Reference local .aar file if it doesn't exist in maven
        flatDir { dirs '../../' }
        maven { url 'https://jitpack.io' }
        maven {
            name 'glide-snapshot'
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "1000"
        }
    }
}

subprojects {
    // Optionally configure plugin
    ktlint {
        debug.set(true)
    }
}

spotless {
    java {
        target '**/*.java'
        googleJavaFormat().aosp()
        removeUnusedImports()
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }

    kotlin {
        target "**/*.kt"
        ktlint(ktlint_version)
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }

    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/.gitignore'
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }

    format 'xml', {
        target '**/*.xml'
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "com.android.support") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "26.+"
            }
        }

        if (requested.group == "androidx.appcompat") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "1.+"
            }
        }
    }

    exclude group: 'com.google.protobuf', module: 'protobuf-lite'
    exclude group: 'com.google.protobuf', module: 'protobuf-java'

    exclude group: "com.android.support", module: "support-core-ui"
    exclude group: "com.android.support", module: "support-compat"
}
