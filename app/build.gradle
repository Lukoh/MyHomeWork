plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'kotlin-allopen'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    defaultConfig {
        testInstrumentationRunnerArguments
        aaptOptions.cruncherEnabled = false
        applicationId "com.goforer.myhomework"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        ndk.abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'mips', 'mips64', 'arm64-v8a'
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionCode}-${variant.versionName}.apk"
        }
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    sourceSets {
        String sharedTestDir = 'src/commonTest/kotlin'
        main {
            main.java.srcDirs += 'src/main/kotlin'
            test.java.srcDirs += 'src/test/kotlin'
            test.java.srcDirs += sharedTestDir
            androidTest.java.srcDirs += 'src/androidTest/kotlin'
            androidTest.java.srcDirs += sharedTestDir
            resources.srcDirs += ['src/commonTest/resources']
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'mips', 'mips64', 'arm64-v8a'
            universalApk true
        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
            all {
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                    outputs.upToDateWhen { false }
                    exceptionFormat = 'full'
                    showStandardStreams = true
                }

                useJUnitPlatform()
            }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11

        kotlinOptions {
            suppressWarnings = true
            jvmTarget = '11'
            jvmTarget = JavaVersion.VERSION_11
            apiVersion = '1.4'
            languageVersion = '1.4'
            freeCompilerArgs += [
                    "-Xopt-in=kotlin.RequiresOptIn",
                    "-Xopt-in=kotlin.OptIn"
            ]
        }
    }


    packagingOptions {
        exclude "META-INF/LICENSE*"
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    lintOptions {
        checkDependencies true
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$androidx_core_ktx_version"
    implementation 'com.google.android.material:material:1.4.0'

    implementation "androidx.multidex:multidex:$androidx_multidex_version"

    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.fragment:fragment-ktx:$arch_fragmentVersion"
    implementation "androidx.activity:activity-ktx:$arch_activityVersion"
    implementation "androidx.recyclerview:recyclerview:$androidx_recyclerview_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$arch_lifecycle_extension_version"
    // Lifecycles only (no ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$arch_lifecycle_runtime_ktx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$arch_lifecycle_ktx"
    implementation "androidx.lifecycle:lifecycle-common-java8:$arch_lifecycle_version"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_gradle_plugin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_gradle_plugin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_gradle_plugin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_gradle_plugin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_version"

    implementation "androidx.paging:paging-runtime-ktx:$arch_paging_version"
    implementation "androidx.lifecycle:lifecycle-runtime-testing:$arch_lifecycle_version"
    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha03'
    testImplementation "androidx.paging:paging-common-ktx:$arch_paging_version"

    implementation 'com.google.code.gson:gson:2.8.7'

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:5.0.0-alpha.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    implementation 'com.squareup.okio:okio:3.0.0-alpha.6'

    // Glide(Image library)
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.github.bumptech.glide:annotations:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    // Json Logging
    implementation 'com.orhanobut:logger:2.2.0'

    // Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    // Debuging Network & Resources
    implementation 'com.facebook.stetho:stetho:1.6.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$arch_nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$arch_nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$arch_nav_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'

    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation 'org.mockito:mockito-inline:3.5.13'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'io.mockk:mockk:1.12.0'
//    androidTestImplementation 'io.mockk:mockk-agent-android:1.10.6'
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'

    // (Optional) If you need "Parameterized Tests"
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'

    // (Optional) If you also have JUnit 4-based tests
    testImplementation 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.1'

    // Jupiter API & Test Runner, if you don't have it already
    androidTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'

    // Robolectric for test context
    testImplementation 'org.robolectric:robolectric:4.6.1'

    // The instrumentation test companion libraries
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.2.2"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.2.2"

    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'com.google.truth:truth:1.1.3'
    androidTestUtil 'androidx.test:orchestrator:1.4.0'

    debugImplementation "androidx.fragment:fragment-testing:$arch_fragmentVersion"
    debugImplementation 'androidx.test:core:1.4.0'

    androidTestImplementation "org.powermock:powermock-module-junit4:2.0.9"
    androidTestImplementation "org.powermock:powermock-api-mockito:1.7.4"


    // Required for instrumented tests
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:2.2'
    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // Optional -- UI testing with UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    implementation 'commons-io:commons-io:20030203.000550'
}
